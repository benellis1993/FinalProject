// <auto-generated />
using System;
using FinalProject.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FinalProject.Migrations
{
    [DbContext(typeof(MusicianDbContext))]
    partial class MusicianDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.14");

            modelBuilder.Entity("FinalProject.Models.Discography", b =>
                {
                    b.Property<int>("DiscographyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("MusicianId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("RecordName")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("TEXT");

                    b.Property<int>("ReleaseDate")
                        .HasColumnType("INTEGER");

                    b.HasKey("DiscographyId");

                    b.HasIndex("MusicianId");

                    b.ToTable("Discographys");
                });

            modelBuilder.Entity("FinalProject.Models.Instrument", b =>
                {
                    b.Property<int>("InstrumentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("InstrumentName")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("TEXT");

                    b.Property<int?>("MusicianId")
                        .HasColumnType("INTEGER");

                    b.HasKey("InstrumentId");

                    b.HasIndex("MusicianId");

                    b.ToTable("Instruments");
                });

            modelBuilder.Entity("FinalProject.Models.Musician", b =>
                {
                    b.Property<int>("MusicianId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("MusicianName")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("TEXT");

                    b.Property<string>("Website")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("MusicianId");

                    b.ToTable("Musicians");
                });

            modelBuilder.Entity("FinalProject.Models.MusicianInstrument", b =>
                {
                    b.Property<int>("MusicianInstrumentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("InstrumentId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MusicianId")
                        .HasColumnType("INTEGER");

                    b.HasKey("MusicianInstrumentId");

                    b.HasIndex("InstrumentId");

                    b.HasIndex("MusicianId");

                    b.ToTable("MusicianInstruments");
                });

            modelBuilder.Entity("FinalProject.Models.Discography", b =>
                {
                    b.HasOne("FinalProject.Models.Musician", "Musician")
                        .WithMany("Discography")
                        .HasForeignKey("MusicianId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Musician");
                });

            modelBuilder.Entity("FinalProject.Models.Instrument", b =>
                {
                    b.HasOne("FinalProject.Models.Musician", null)
                        .WithMany("Instrument")
                        .HasForeignKey("MusicianId");
                });

            modelBuilder.Entity("FinalProject.Models.MusicianInstrument", b =>
                {
                    b.HasOne("FinalProject.Models.Instrument", "Instrument")
                        .WithMany("MusicianInstruments")
                        .HasForeignKey("InstrumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FinalProject.Models.Musician", "Musician")
                        .WithMany("MusicianInstruments")
                        .HasForeignKey("MusicianId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Instrument");

                    b.Navigation("Musician");
                });

            modelBuilder.Entity("FinalProject.Models.Instrument", b =>
                {
                    b.Navigation("MusicianInstruments");
                });

            modelBuilder.Entity("FinalProject.Models.Musician", b =>
                {
                    b.Navigation("Discography");

                    b.Navigation("Instrument");

                    b.Navigation("MusicianInstruments");
                });
#pragma warning restore 612, 618
        }
    }
}
